"""Add club schedules and opening hours

Revision ID: 732fe9639c43
Revises: d0085e1b85cd
Create Date: 2025-09-22 16:17:25.482638

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '732fe9639c43'
down_revision: Union[str, None] = 'd0085e1b85cd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('bookings', sa.Column('turn_id', sa.Integer(), nullable=True))
    op.add_column('bookings', sa.Column('match_id', sa.Integer(), nullable=True))
    op.add_column('bookings', sa.Column('payment_status', sa.String(), nullable=True))
    op.add_column('bookings', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('bookings', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('bookings', 'court_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('bookings', 'status',
               existing_type=sa.VARCHAR(),
               type_=sa.Enum('PENDING', 'CONFIRMED', 'CANCELLED', 'COMPLETED', name='bookingstatus'),
               existing_nullable=True)
    op.create_index(op.f('ix_bookings_id'), 'bookings', ['id'], unique=False)
    op.create_foreign_key(None, 'bookings', 'turns', ['turn_id'], ['id'])
    op.create_foreign_key(None, 'bookings', 'matches', ['match_id'], ['id'])
    op.drop_column('bookings', 'start_time')
    op.drop_column('bookings', 'end_time')
    op.add_column('clubs', sa.Column('opening_time', sa.Time(), nullable=False))
    op.add_column('clubs', sa.Column('closing_time', sa.Time(), nullable=False))
    op.add_column('clubs', sa.Column('turn_duration_minutes', sa.Integer(), nullable=True))
    op.add_column('clubs', sa.Column('monday_open', sa.Boolean(), nullable=True))
    op.add_column('clubs', sa.Column('tuesday_open', sa.Boolean(), nullable=True))
    op.add_column('clubs', sa.Column('wednesday_open', sa.Boolean(), nullable=True))
    op.add_column('clubs', sa.Column('thursday_open', sa.Boolean(), nullable=True))
    op.add_column('clubs', sa.Column('friday_open', sa.Boolean(), nullable=True))
    op.add_column('clubs', sa.Column('saturday_open', sa.Boolean(), nullable=True))
    op.add_column('clubs', sa.Column('sunday_open', sa.Boolean(), nullable=True))
    op.add_column('matches', sa.Column('score', sa.String(), nullable=True))
    op.alter_column('matches', 'status',
               existing_type=sa.VARCHAR(),
               type_=sa.Enum('AVAILABLE', 'RESERVED', 'IN_PROGRESS', 'COMPLETED', name='matchstatus'),
               existing_nullable=True)
    op.add_column('turns', sa.Column('price', sa.Integer(), nullable=False))
    op.add_column('turns', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('turns', 'court_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('turns', 'status',
               existing_type=sa.VARCHAR(),
               type_=sa.Enum('AVAILABLE', 'BOOKED', 'CANCELLED', 'COMPLETED', name='turnstatus'),
               existing_nullable=True)
    op.create_index(op.f('ix_turns_id'), 'turns', ['id'], unique=False)
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_index(op.f('ix_turns_id'), table_name='turns')
    op.alter_column('turns', 'status',
               existing_type=sa.Enum('AVAILABLE', 'BOOKED', 'CANCELLED', 'COMPLETED', name='turnstatus'),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('turns', 'court_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('turns', 'updated_at')
    op.drop_column('turns', 'price')
    op.alter_column('matches', 'status',
               existing_type=sa.Enum('AVAILABLE', 'RESERVED', 'IN_PROGRESS', 'COMPLETED', name='matchstatus'),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.drop_column('matches', 'score')
    op.drop_column('clubs', 'sunday_open')
    op.drop_column('clubs', 'saturday_open')
    op.drop_column('clubs', 'friday_open')
    op.drop_column('clubs', 'thursday_open')
    op.drop_column('clubs', 'wednesday_open')
    op.drop_column('clubs', 'tuesday_open')
    op.drop_column('clubs', 'monday_open')
    op.drop_column('clubs', 'turn_duration_minutes')
    op.drop_column('clubs', 'closing_time')
    op.drop_column('clubs', 'opening_time')
    op.add_column('bookings', sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('bookings', sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'bookings', type_='foreignkey')
    op.drop_constraint(None, 'bookings', type_='foreignkey')
    op.drop_index(op.f('ix_bookings_id'), table_name='bookings')
    op.alter_column('bookings', 'status',
               existing_type=sa.Enum('PENDING', 'CONFIRMED', 'CANCELLED', 'COMPLETED', name='bookingstatus'),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('bookings', 'court_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('bookings', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('bookings', 'updated_at')
    op.drop_column('bookings', 'payment_status')
    op.drop_column('bookings', 'match_id')
    op.drop_column('bookings', 'turn_id')
    # ### end Alembic commands ###
