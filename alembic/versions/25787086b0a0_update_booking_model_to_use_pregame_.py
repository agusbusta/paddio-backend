"""Update booking model to use pregame_turn_id instead of turn_id

Revision ID: 25787086b0a0
Revises: cfbdfbb8bb7c
Create Date: 2025-09-23 00:56:10.702294

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '25787086b0a0'
down_revision: Union[str, None] = 'cfbdfbb8bb7c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('bookings', sa.Column('pregame_turn_id', sa.Integer(), nullable=True))
    op.add_column('bookings', sa.Column('match_id', sa.Integer(), nullable=True))
    op.add_column('bookings', sa.Column('payment_status', sa.String(), nullable=True))
    op.add_column('bookings', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('bookings', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('bookings', 'court_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('bookings', 'status',
               existing_type=sa.VARCHAR(),
               type_=sa.Enum('PENDING', 'CONFIRMED', 'CANCELLED', 'COMPLETED', name='bookingstatus'),
               existing_nullable=True)
    op.create_index(op.f('ix_bookings_id'), 'bookings', ['id'], unique=False)
    op.create_foreign_key(None, 'bookings', 'matches', ['match_id'], ['id'])
    op.create_foreign_key(None, 'bookings', 'pregame_turns', ['pregame_turn_id'], ['id'])
    op.drop_column('bookings', 'start_time')
    op.drop_column('bookings', 'end_time')
    op.alter_column('clubs', 'opening_time',
               existing_type=postgresql.TIME(),
               nullable=False,
               existing_server_default=sa.text("'08:00:00'::time without time zone"))
    op.alter_column('clubs', 'closing_time',
               existing_type=postgresql.TIME(),
               nullable=False,
               existing_server_default=sa.text("'22:00:00'::time without time zone"))
    op.add_column('matches', sa.Column('score', sa.String(), nullable=True))
    op.alter_column('matches', 'status',
               existing_type=sa.VARCHAR(),
               type_=sa.Enum('AVAILABLE', 'RESERVED', 'IN_PROGRESS', 'COMPLETED', name='matchstatus'),
               existing_nullable=True)
    op.alter_column('turns', 'turns_data',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=False)
    op.create_index(op.f('ix_turns_id'), 'turns', ['id'], unique=False)
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_index(op.f('ix_turns_id'), table_name='turns')
    op.alter_column('turns', 'turns_data',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False)
    op.alter_column('matches', 'status',
               existing_type=sa.Enum('AVAILABLE', 'RESERVED', 'IN_PROGRESS', 'COMPLETED', name='matchstatus'),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.drop_column('matches', 'score')
    op.alter_column('clubs', 'closing_time',
               existing_type=postgresql.TIME(),
               nullable=True,
               existing_server_default=sa.text("'22:00:00'::time without time zone"))
    op.alter_column('clubs', 'opening_time',
               existing_type=postgresql.TIME(),
               nullable=True,
               existing_server_default=sa.text("'08:00:00'::time without time zone"))
    op.add_column('bookings', sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('bookings', sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'bookings', type_='foreignkey')
    op.drop_constraint(None, 'bookings', type_='foreignkey')
    op.drop_index(op.f('ix_bookings_id'), table_name='bookings')
    op.alter_column('bookings', 'status',
               existing_type=sa.Enum('PENDING', 'CONFIRMED', 'CANCELLED', 'COMPLETED', name='bookingstatus'),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('bookings', 'court_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('bookings', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('bookings', 'updated_at')
    op.drop_column('bookings', 'payment_status')
    op.drop_column('bookings', 'match_id')
    op.drop_column('bookings', 'pregame_turn_id')
    # ### end Alembic commands ###
